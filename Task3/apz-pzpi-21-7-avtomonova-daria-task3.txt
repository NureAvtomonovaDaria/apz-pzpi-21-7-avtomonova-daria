1 МОДЕЛЮВАННЯ ПРОГРАМНОЇ СИСТЕМИ

Програмна система організації та керування мережею фітнес клубів, басейнів має 2 ролі користувачів: звичайний відвідувач тренажерних залів (користувач) та адміністратор.
Взаємодію усіх акторів з програмною системою представлено на діаграмі прецедентів (рис. 1).
Таким чином, користувач отримує QR-code при придбанні абонемента, який потім має бути просканований адміністратором для пропуску користувача до залу, а також для внесення його відвідування до бази даних. 
 
2 ПОБУДОВА ДІАГРАМИ ВЗІЄМОДІЇ

Для визначення взаємодії IoT девайсу та системи було використано UML діаграму взаємодії (див. рис. 2).
Після сканування QR-коду користувача, на сервер потрапляють розшифровані дані, а до відвідувань користувача додається нове, з датою та часом сканування. 
 
3 ПОБУДОВА ДІАГРАМИ ДІЯЛЬНОСТІ

Для визначення процесу використання IOT частини програмного застосунку було побудовано діаграму діяльності (рис. 3).
Під час сканування QR-коду, якщо виявляється помилка, виконується спроба перегенерувати QR-код. Якщо сканування успішне, то відбувається розшифрування даних користувача про його дані та дані його абонементу, а також створюється нове відвідування для користувача. 
 
4 ПОБУДОВА ДІАГРАМИ ПАКЕТІВ

З метою відображення внутрішньої структури програмної системи була розроблена UML діаграма пакетів (рис. 4).
Основний набір - це пакет Node-RED Flow, де визначаються всі взаємодії та логіка системи. У Core Functions містяться функціональні блоки, що виконують основні операції, наприклад, зберігання даних. Dashboard Nodes містить набори вузлів для створення графічного інтерфейсу користувача, використовувані переважно для тестування. У пакеті IoT Device Modules містяться специфічні модулі для різних IoT-пристроїв, які забезпечують взаємодію з реальними сенсорами та пристроями.
 
5 РОЗРОБКА IOT ЧАСТИНИ

Для реалізації IOT частини було інтегровано Node-RED у програмну систему через використання npm.
Для розшифрування QR-коду було використано вузол qrdecode, а запити на сервер реалізовані через вузли http.
Було створено потік даних, що приймав запит на сканування коду. Створено функцію для обробки вхідних даних для їх подальшого розшифрування. Додано функцію для обробки розшифрованих даних та функцію для приведення їх до формату JSON для подальшої участі у http запитах до сервера.
Було створено кінцеву точку для серверної частини, яка зберігала дані у базі даних.
 
ВИСНОВКИ

Під час виконання лабораторної роботи були створені UML діаграми прецедентів, взаємодії, діяльності та пакетів для IOT частини програмної системи. Також була розроблена IOT частина програмної системи та інтегрована у все розроблену частину системи. При розробці продукту дотримувались вимоги чистого коду та Code Convention мови програмування Javascript.
